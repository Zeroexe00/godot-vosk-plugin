name: Build GDExtension for Linux (multi-arch)

on:
  push:
    branches: [release]

jobs:
  build-multiarch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - x86_64
          - i686
          - aarch64
          - arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip curl tar pkg-config
          pip install scons==4.8.1

      - name: Download SDK and Build with SCons for ${{ matrix.arch }}
        run: |
          ARCH=${{ matrix.arch }}

          if [ "$ARCH" = "arm" ]; then
            SDK_FILE="arm-godot-linux-gnueabihf_sdk-buildroot.tar.bz2"
            SDK_DIR="arm-godot-linux-gnueabihf_sdk-buildroot"
          else
            SDK_FILE="${ARCH}-godot-linux-gnu_sdk-buildroot.tar.bz2"
            SDK_DIR="${ARCH}-godot-linux-gnu_sdk-buildroot"
          fi

          curl -LO https://github.com/godotengine/buildroot/releases/download/godot-2023.08.x-4/$SDK_FILE
          tar xf $SDK_FILE
          rm -f $SDK_FILE

          cd $SDK_DIR
          ./relocate-sdk.sh
          source environment-setup
          cd $GITHUB_WORKSPACE

          # Crear carpeta de salida por arquitectura
          OUTPUT_DIR=bin/linux/$ARCH
          mkdir -p $OUTPUT_DIR

          # Compilar
          scons platform=linux target=template_release arch=$ARCH

          # Mover binarios generados (*.so) al directorio correspondiente
          find bin/ -maxdepth 1 -name "*.so" -exec mv {} $OUTPUT_DIR/ \;

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gdextension-linux-${{ matrix.arch }}
          path: bin/linux/${{ matrix.arch }}/
