#include <vosk_api.h>
#include <iostream>
#include <fstream>
#include <vector>

int VoskSpeechToText() {
  std::ifstream wavin("test_comando.wav", std::ios::binary);
    if (!wavin) {
        std::cerr << "Error opening file!\n";
        return 1;
    }

    std::vector<char> buf(3200);  // Buffer for reading data
    int final;
    
    VoskModel *model = vosk_model_new("model");
    VoskRecognizer *recognizer = vosk_recognizer_new(model, 16000.0);

    wavin.seekg(44);  // Skip the WAV header
    while (wavin.read(buf.data(), buf.size()) || wavin.gcount() > 0) {
        final = vosk_recognizer_accept_waveform(recognizer, buf.data(), wavin.gcount());
        if (final) {
            std::cout << vosk_recognizer_result(recognizer) << std::endl;
        } else {
            std::cout << vosk_recognizer_partial_result(recognizer) << std::endl;
        }
    }

    std::cout << vosk_recognizer_final_result(recognizer) << std::endl;

    vosk_recognizer_free(recognizer);
    vosk_model_free(model);
    wavin.close();

    return 0;
}